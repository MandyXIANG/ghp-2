{
  "class": "",
  "graph_data": [
    {
      "datasource": {
        "class": "",
        "data": "function func(rawData, uiLoader) {\n  importPackage('moment')\n  var inData = JSON.parse(rawData)\n\n\n  var startDate = inData.startdate + ' 00:00:00'\n  var endDate = inData.enddate + ' ' + moment().format('HH:mm:ss')\n  var Process_code = inData.process_code //工序代码\n  var Partnumber = inData.partnumber //料号\n  var Lot_no = inData.lot_no //批次\n  var Stage1_dmc = inData.stage1_dmc //任务单号\n\n\n  var db = new TSqlQueryV2(T_SQLCNT_POOL.getSqlDatabase())\n\n\n  try {\n    var where = [\n      \"t0.actual_start_time  BETWEEN '\" + startDate + \"' AND '\" + endDate + \"'\",\n      't0.actual_start_time NOTNUll',\n      // \"(qc.attr_data ->>'spot_test_flag') NOTNULL\",\n      // \"class='iqs_form'\",\n    ]\n    if (Process_code != '') {\n      where.push(\"t0.process_code ='\" + Process_code + \"'\")\n    }\n    if (Partnumber != '') {\n      where.push(\"t0.partnumber LIKE '%\" + Partnumber + \"%'\")\n    }\n    if (Lot_no != '') {\n      where.push(\"t0.lot_no ='\" + Lot_no + \"'\")\n    }\n    // if (Stage1_dmc != '') {\n    //   where.push(\"t0.lot_no ='\" + Stage1_dmc + \"'\")\n    // }\n\n\n    var finishedPlanLst = db.selectArrayMap({\n      table:\n        'mes_prod_process AS t0 ' +\n        'INNER JOIN wms_warehouse_inventory AS t1 ON t0.process_code = t1.warehouse_code ' +\n        'INNER JOIN mes_main_plan AS t2 ON t0.lot_no = t2.lot_no ',\n      field: [\n        // 't0.prod_workshift_title', //班组\n        't0.partnumber', //料号\n        't0.lot_no', //批次\n        't0.short_lot_no ', //挂架号\n        't0.input_qty', //入站\n        't0.output_qty', //合格\n        't0.scrap_qty', //不合格\n        \"t0.output_qty_detail ->> 'diff_qty' as\" +\n          '\"output_qty_detail.diff_qty\"', //盈亏\n        't0.actual_start_time', // 挂架报工开始时间,\n        't0.actual_end_time', // 挂架报工结束时间\n        't0.process_code', //工序code\n        't0.process_title', //工序名称\n        't0.status', //工序状态\n        't1.current_bits_count', //当前批次数量\n        't2.input_qty', //计划数量\n      ],\n      where: where,\n      order: ['t0.lot_no DESC', 't0.actual_start_time DESC'],\n      limit: 1000,\n    })\n\n\n    var table = getTableViewStructure(startDate, endDate)\n    uiLoader.getObject('table').setHeaderItem(table.header_items)\n    uiLoader.getObject('table').setDataKeyList(table.data_keys)\n    return JSON.stringify({\n      table: finishedPlanLst,\n    })\n  } catch (e) {\n    TLogger.writeLog('error::' + _.toString(e))\n  }\n\n\n  function getTableViewStructure() {\n    var table = {\n      header_items: [\n        // {\n        //   name: 'prod_workshift_title',\n        //   display: '班组',\n        //   displayRole: '$prod_workshift_title',\n        //   resizeMode: 'ResizeToContents',\n        // },\n        {\n          name: 'partnumber',\n          display: '料号',\n          displayRole: '$partnumber',\n          resizeMode: 'ResizeToContents',\n        },\n        {\n          name: 'lot_no',\n          display: '批次',\n          displayRole: '$lot_no',\n          resizeMode: 'ResizeToContents',\n        },\n        {\n          name: 'short_lot_no',\n          display: '挂架号',\n          displayRole: '$short_lot_no',\n          resizeMode: 'ResizeToContents',\n        },\n        {\n          name: 'input_qty',\n          display: '入站',\n          displayRole: '$input_qty',\n          resizeMode: 'ResizeToContents',\n        },\n        {\n          name: 'output_qty',\n          display: '合格',\n          displayRole: '$output_qty',\n          resizeMode: 'ResizeToContents',\n        },\n        {\n          name: 'scrap_qty',\n          display: '不合格',\n          displayRole: '$scrap_qty',\n          resizeMode: 'ResizeToContents',\n        },\n        {\n          name: 'output_qty_detail.diff_qty',\n          display: '盈亏',\n          displayRole: '$output_qty_detail.diff_qty',\n          resizeMode: 'ResizeToContents',\n        },\n        {\n          name: 'actual_start_time',\n          display: '开工时间',\n          displayRole: '$actual_start_time',\n          resizeMode: 'ResizeToContents',\n        },\n        {\n          name: 'actual_end_time',\n          display: '完工时间',\n          displayRole: '$actual_end_time',\n          resizeMode: 'ResizeToContents',\n        },\n        {\n          name: 'process_code',\n          display: '工序代码',\n          displayRole: '$process_code',\n          resizeMode: 'ResizeToContents',\n        },\n        {\n          name: 'process_title',\n          display: '工序名称',\n          displayRole: '$process_title',\n          resizeMode: 'ResizeToContents',\n        },\n        {\n          name: 'status',\n          display: '工序状态',\n          displayRole: '$status',\n          resizeMode: 'ResizeToContents',\n        },\n        {\n          name: 'current_bits_count',\n          display: '当前批次数量',\n          displayRole: '$current_bits_count',\n          resizeMode: 'ResizeToContents',\n        },\n        // {\n        //   name: 'plan_title',\n        //   display: '计划单号',\n        //   displayRole: '$plan_title',\n        //   resizeMode: 'ResizeToContents',\n        // },\n        // {\n        //   name: 'plan_status',\n        //   display: '计划单状态',\n        //   displayRole: '$plan_status',\n        //   resizeMode: 'ResizeToContents',\n        // },\n        {\n          name: 'input_qty',\n          display: '计划数量',\n          displayRole: '$input_qty',\n          resizeMode: 'ResizeToContents',\n        },\n      ],\n      data_keys: [\n        // 'prod_workshift_title',\n        'partnumber',\n        'lot_no',\n        'short_lot_no',\n        'input_qty',\n        'output_qty',\n        'scrap_qty',\n        'output_qty_detail.diff_qty',\n        'actual_start_time',\n        'actual_end_time',\n        'process_code',\n        'process_title',\n        'status',\n        'current_bits_count',\n        // 'plan_title',\n        // 'plan_status',\n        'input_qty',\n      ],\n    }\n\n\n    return table\n  }\n}\n\n",
        "name": "production_process_statistics_display",
        "parameter": "startdate,enddate,process_code,partnumber,lot_no,stage1_dmc",
        "remark": "生产过程展示"
      },
      "graph": {
        "class": "",
        "data": "[\n    {\n        name: 'info',\n        type: 'VBoxLayout',\n        property: { spacing: 0, margin: 0 },\n        child: [\n            {\n                name: 'table',\n                type: 'TreeView',\n                property: {},\n                pack: {},\n                initCallback: function (obj) {\n                },\n                setter: function (obj, value, self) {\n                  if (value != null) {\n                      obj.loadTreeData(value);\n                  } else {\n                    obj.loadTreeData([]);\n                  }\n              }\n            }\n        ]\n    }\n]\n\n\n",
        "dynamic": 1,
        "name": "production_process_statistics_display",
        "parameter_remark": "",
        "remark": "生产过程展示"
      }
    }
  ],
  "graph_layout": {
    "child": [
      {
        "name": "production_process_statistics_display",
        "pack": {
          "columnSpan": 1,
          "fromColumn": 0,
          "fromRow": 0,
          "rowSpan": 2
        },
        "type": "uiloader"
      }
    ],
    "type": "gridlayout"
  },
  "name": "production_process_statistics_display",
  "parameter_list": "function func(self) {\n  importPackage('moment')\n  return [\n    {\n      name: 'widget',\n      type: 'Widget',\n      property: {},\n      child: [\n        {\n          name: 'scrollarea',\n          type: 'ScrollArea',\n          property: { widget_resizable: true, frame_shape: 'QFrame::NoFrame' },\n          pack: {},\n          child: {\n            name: 'gridlayout',\n            type: 'GridLayout',\n            property: {},\n            pack: {},\n            child: [\n              // 开始时间\n              {\n                name: 'startdatelbl',\n                type: 'Label',\n                property: {\n                  text: '开始时间',\n                  alignment: 'Qt::AlignLeft',\n                  size_policy: 'Fixed,Fixed',\n                },\n                pack: { row: 0, column: 0 },\n              },\n              {\n                name: 'startdate',\n                type: 'DateEdit',\n                title: self.ttr('Start Date'),\n                pack: { row: 0, column: 1 },\n                initCallback: function (obj, self) {\n                  obj.setData('value', APP.getToday())\n                },\n                validate: function (obj, val, title, moments, self) {\n                  var endDateStr = this.getValue('enddate')\n                  endDateStr = String(endDateStr).replace(/-/g, '/')\n                  val = String(val).replace(/-/g, '/')\n                  var endDate = new Date(endDateStr)\n                  var startDate = new Date(val)\n                  if (val.trim() == '') {\n                    return [title + self.ttr(' can not be null!'), 'Error']\n                  } else if (startDate > endDate) {\n                    return [\n                      self.ttr('Start date can not be later than end date!'),\n                      'Error',\n                    ]\n                  }\n                },\n              },\n              // 结束时间\n              {\n                name: 'endtdatelbl',\n                type: 'Label',\n                property: {\n                  text: '结束时间',\n                  alignment: 'Qt::AlignLeft',\n                  size_policy: 'Fixed,Fixed',\n                },\n                pack: { row: 0, column: 2 },\n              },\n              {\n                name: 'enddate',\n                type: 'DateEdit',\n                title: self.ttr('End Date'),\n                pack: { row: 0, column: 3},\n                validate: 'NOTNULL',\n                initCallback: function (obj, self) {\n                  obj.setData('value', APP.getToday())\n                },\n              },\n\n\n              //料号\n              {\n                name: 'Partnumber',\n                type: 'Label',\n                property: {\n                  text: '料号',\n                  alignment: 'Qt::AlignLeft',\n                  size_policy: 'Fixed,Fixed',\n                },\n                pack: { row: 0, column: 4 },\n              },\n              {\n                name: 'partnumber',\n                type: 'LineEdit',\n                title: self.ttr('Partnumber'),\n                property: {\n                  user_data: { operator: 'like' },\n                },\n                pack: { row: 0, column: 5 },\n              },\n\n\n              // 批次\n              {\n                name: 'Lot_no',\n                type: 'Label',\n                property: {\n                  text: '批次',\n                  alignment: 'Qt::AlignLeft',\n                  size_policy: 'Fixed,Fixed',\n                },\n                pack: { row: 1, column: 0 },\n              },\n              {\n                name: 'lot_no',\n                type: 'LineEdit',\n                title: self.ttr('Lot_no'),\n                pack: { row: 1, column: 1 },\n              },\n\n\n              //任务单号\n              {\n                name: 'Stage1_dmc',\n                type: 'Label',\n                property: {\n                  text: '任务单号',\n                  alignment: 'Qt::AlignLeft',\n                  size_policy: 'Fixed,Fixed',\n                },\n                pack: { row: 1, column: 2 },\n              },\n              {\n                name: 'stage1_dmc',\n                type: 'LineEdit',\n                title: self.ttr('Stage1_dmc'),\n                pack: { row: 1, column: 3 },\n              },\n\n\n              // 工序code\n              {\n                name: 'Process_code',\n                type: 'Label',\n                property: {\n                  text: '工序代码',\n                  alignment: 'Qt::AlignLeft',\n                  size_policy: 'Fixed,Fixed',\n                },\n                pack: { row: 1, column: 4 },\n              },\n              {\n                name: 'process_code',\n                type: 'ComboBox',\n                title: self.ttr('Process_code'),\n                property: {\n                  item_list: [\n                    { name: 'GF003_01', text: '清洗1_投料' },\n                    { name: 'GF003_02', text: '清洗1_清洗' },\n                    { name: 'GF014_GF003', text: '清洗1_检验' },\n                    { name: 'GF015_GF003', text: '清洗1_包装' },\n                    { name: 'GF006_01', text: '钝化2_投料' },\n                    { name: 'GF005_01', text: '钝化1_投料' },\n                    { name: 'GF005_02', text: '钝化1_清洗' },\n                    { name: 'GF006_02', text: '钝化2_清洗' },\n                    { name: 'GF014_GF005', text: '钝化1_检验' },\n                    { name: 'GF014_GF006', text: '钝化2_检验' },\n                    { name: 'GF015_GF005', text: '钝化1_包装' },\n                    { name: 'GF015_GF006', text: '钝化2_包装' },\n                  ],\n                },\n                pack: { row: 1, column: 5 },\n              },\n            ],\n          },\n        },\n      ],\n    },\n  ]\n}\n\n",
  "remark": "生产过程展示"
}