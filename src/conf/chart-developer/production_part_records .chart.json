{
  "class": "",
  "graph_data": [
    {
      "datasource": {
        "class": "",
        "data": "function func(rawData, uiLoader) {\n  importPackage('moment')\n  var inData = JSON.parse(rawData)\n\n\n  var startDate = inData.startdate + ' 07:00:00'\n  var endDate = inData.enddate + ' 23:59:59'\n  var Partnumber = inData.partnumber\n  var Stage1_dmc = inData.stage1_dmc\n  var Accept_user = inData.accept_user\n  var Process_code = inData.process_code\n\n\n  var db = new TSqlQueryV2(T_SQLCNT_POOL.getSqlDatabase())\n\n\n  try {\n    var where = [\n      \"t1.start_time BETWEEN '\" + startDate + \"' AND '\" + endDate + \"'\",\n    ]\n    if (Partnumber != '') {\n      where.push(\"t0.partnumber LIKE '%\" + Partnumber + \"%'\")\n    }\n    if (Stage1_dmc != '') {\n      where.push(\"t0.stage1_dmc ='\" + Stage1_dmc + \"'\")\n    }\n    if (Accept_user != '') {\n      where.push(\"t1.action_data ->> 'accept_user' ='\" + Accept_user + \"'\")\n    }\n    if (Process_code != '') {\n      where.push(\"t1.attr_data ->> 'process_code' ='\" + Process_code + \"'\")\n    }\n    where.push(\"(t1.attr_data ->> 'receive_flag')::VARCHAR = '1'\")\n\n\n    var finishedPlanLst = db.selectArrayMap({\n      table:\n        'mes_wip_parts t0 ' +\n        'LEFT JOIN mes_wip_parts_prod_resume t1 ON t0.id = t1.wip_parts_id',\n      field: [\n        't0.partnumber', //产品号,\n        't0.stage1_dmc', //批次号,\n        't0.stage2_dmc', //挂架号,\n        \"t1.attr_data ->> 'input_qty' as \" + '\"attr_data.input_qty\"', // 挂次数量,\n        \"t1.action_data ->> 'accept_user' as \" + '\"action_data.accept_user\"', // 收料人员,\n        \"t1.action_data ->> 'accept_time' as\" + '\" action_data.accept_time\"', // 收料时间\n      ],\n      where: where,\n      order: \"t1.action_data ->> 'accept_time' ASC\",\n    })\n\n\n    var table = getTableViewStructure(startDate, endDate)\n    uiLoader.getObject('table').setHeaderItem(table.header_items)\n    uiLoader.getObject('table').setDataKeyList(table.data_keys)\n    return JSON.stringify({\n      table: finishedPlanLst,\n    })\n  } catch (e) {\n    TLogger.writeLog('error::' + _.toString(e))\n  }\n\n\n  function getTableViewStructure() {\n    var table = {\n      header_items: [\n        {\n          name: 'partnumber',\n          display: '物料编码',\n          displayRole: '$partnumber',\n          resizeMode: 'ResizeToContents',\n        },\n        {\n          name: 'stage1_dmc',\n          display: '批号',\n          displayRole: '$stage1_dmc',\n          resizeMode: 'ResizeToContents',\n        },\n        {\n          name: 'stage2_dmc',\n          display: '挂架号',\n          displayRole: '$stage2_dmc',\n          resizeMode: 'ResizeToContents',\n        },\n        {\n          name: 'attr_data.input_qty',\n          display: '挂次数量',\n          displayRole: '$attr_data.input_qty',\n          resizeMode: 'ResizeToContents',\n        },\n        {\n          name: 'action_data.accept_user',\n          display: '收料人员',\n          displayRole: '$action_data.accept_user',\n          resizeMode: 'ResizeToContents',\n        },\n        {\n          name: 'action_data.accept_time',\n          display: '收料时间',\n          displayRole: '$action_data.accept_time',\n          resizeMode: 'ResizeToContents',\n        },\n      ],\n      data_keys: [\n        'partnumber',\n        'stage1_dmc',\n        'stage2_dmc',\n        'attr_data.input_qty',\n        'action_data.accept_user',\n        'action_data.accept_time',\n      ],\n    }\n\n\n    return table\n  }\n}\n\n",
        "name": "production_part_record",
        "parameter": "startdate,enddate,partnumber,stage1_dmc,accept_user,process_code",
        "remark": "生产部零件记录(下料)"
      },
      "graph": {
        "class": "",
        "data": "[\n    {\n        name: 'info',\n        type: 'VBoxLayout',\n        property: { spacing: 0, margin: 0 },\n        child: [\n            {\n                name: 'table',\n                type: 'TreeView',\n                property: {},\n                pack: {},\n                initCallback: function (obj) {\n                },\n                setter: function (obj, value, self) {\n                  if (value != null) {\n                      obj.loadTreeData(value);\n                  } else {\n                    obj.loadTreeData([]);\n                  }\n              }\n            }\n        ]\n    }\n]\n\n\n",
        "dynamic": 1,
        "name": "production_part_record",
        "parameter_remark": "",
        "remark": "生产零部件记录（下料）"
      }
    }
  ],
  "graph_layout": {
    "child": [
      {
        "name": "production_part_record",
        "pack": {
          "columnSpan": 1,
          "fromColumn": 0,
          "fromRow": 0,
          "rowSpan": 2
        },
        "type": "uiloader"
      }
    ],
    "type": "gridlayout"
  },
  "name": "production_part_records ",
  "parameter_list": "function func(self) {\n  importPackage('moment')\n  return [\n    {\n      name: 'widget',\n      type: 'Widget',\n      property: {},\n      child: [\n        {\n          name: 'scrollarea',\n          type: 'ScrollArea',\n          property: { widget_resizable: true, frame_shape: 'QFrame::NoFrame' },\n          pack: {},\n          child: {\n            name: 'gridlayout',\n            type: 'GridLayout',\n            property: {},\n            pack: {},\n            child: [\n              // 开始时间\n              {\n                name: 'startdatelbl',\n                type: 'Label',\n                property: {\n                  text: '开始时间',\n                  alignment: 'Qt::AlignLeft',\n                  size_policy: 'Fixed,Fixed',\n                },\n                pack: { row: 0, column: 0 },\n              },\n              {\n                name: 'startdate',\n                type: 'DateEdit',\n                title: self.ttr('Start Date'),\n                pack: { row: 0, column: 1 },\n                initCallback: function (obj, self) {\n                  obj.setData('value', APP.getToday())\n                },\n                validate: function (obj, val, title, moments, self) {\n                  var endDateStr = this.getValue('enddate')\n                  endDateStr = String(endDateStr).replace(/-/g, '/')\n                  val = String(val).replace(/-/g, '/')\n                  var endDate = new Date(endDateStr)\n                  var startDate = new Date(val)\n                  if (val.trim() == '') {\n                    return [title + self.ttr(' can not be null!'), 'Error']\n                  } else if (startDate > endDate) {\n                    return [\n                      self.ttr('Start date can not be later than end date!'),\n                      'Error',\n                    ]\n                  }\n                },\n              },\n\n\n              // 结束时间\n              {\n                name: 'endtdatelbl',\n                type: 'Label',\n                property: {\n                  text: '结束时间',\n                  alignment: 'Qt::AlignLeft',\n                  size_policy: 'Fixed,Fixed',\n                },\n                pack: { row: 0, column: 2 },\n              },\n              {\n                name: 'enddate',\n                type: 'DateEdit',\n                title: self.ttr('End Date'),\n                pack: { row: 0, column: 3 },\n                validate: 'NOTNULL',\n                initCallback: function (obj, self) {\n                  obj.setData('value', APP.getToday())\n                },\n              },\n\n\n              // 物料编码\n              {\n                name: 'Partnumber',\n                type: 'Label',\n                property: {\n                  text: '物料编码',\n                  alignment: 'Qt::AlignLeft',\n                  size_policy: 'Fixed,Fixed',\n                },\n                pack: { row: 0, column: 4 },\n              },\n              {\n                name: 'partnumber',\n                type: 'LineEdit',\n                title: self.ttr('Partnumber'),\n                pack: { row: 0, column: 5 },\n              },\n\n\n              // 批次\n              {\n                name: 'Stage1_dmc ',\n                type: 'Label',\n                property: {\n                  text: '批次',\n                  alignment: 'Qt::AlignLeft',\n                  size_policy: 'Fixed,Fixed',\n                },\n                pack: { row: 1, column: 0 },\n              },\n              {\n                name: 'stage1_dmc ',\n                type: 'LineEdit',\n                title: self.ttr('Stage1_dmc '),\n                pack: { row: 1, column: 1 },\n              },\n\n\n              // 收料人员\n              {\n                name: 'Accept_user',\n                type: 'Label',\n                property: {\n                  text: '收料人员',\n                  alignment: 'Qt::AlignLeft',\n                  size_policy: 'Fixed,Fixed',\n                },\n                pack: { row: 1, column: 2 },\n              },\n              {\n                name: 'accept_user',\n                type: 'LineEdit',\n                title: self.ttr('Accept_user'),\n                pack: { row: 1, column: 3 },\n              },\n\n\n              // 检验工序\n              {\n                name: 'Process_code',\n                type: 'Label',\n                property: {\n                  text: '检验工序',\n                  alignment: 'Qt::AlignLeft',\n                  size_policy: 'Fixed,Fixed',\n                },\n                pack: { row: 1, column: 4 },\n              },\n              {\n                name: 'process_code',\n                type: 'ComboBox',\n                title: self.ttr('Process_code'),\n                property: {\n                  item_list: [\n                    { name: 'GF003_03', text: '清洗' },\n                    { name: 'GF006_03', text: '钝化' },\n                    { name: 'GF002_03', text: 'EN2' },\n                    { name: 'GF007_03', text: '氧化' },\n                    { name: 'GF022_03', text: '镀银' },\n                  ],\n                },\n                pack: { row: 1, column: 5 },\n              },\n            ],\n          },\n        },\n      ],\n    },\n  ]\n}\n\n",
  "remark": "生产部零件记录(下料)"
}