{
  "class": "",
  "graph_data": [
    {
      "datasource": {
        "class": "",
        "data": "function func(rawData, uiLoader) {\n  importPackage('moment')\n  var inData = JSON.parse(rawData)\n\n\n  var startDate = inData.startdate + ' 00:00:00'\n  var endDate = inData.enddate +\" \"+ moment().format('HH:mm:ss')\n  var Prtnumber = inData.partnumber\n  var Stage1_dmc = inData.stage1_dmc\n  var Stage2_dmc = inData.stage2_dmc\n  var Process_code = inData.process_code\n  var Mat_type = inData.mat_type\n  var Mat_group = inData.mat_group\n  var Lot_no = inData.lot_no\n\n\n  TLogger.writeLog(endDate)\n\n\n  var db = new TSqlQueryV2(T_SQLCNT_POOL.getSqlDatabase())\n\n\n  try {\n    var where = [\n      \"t1.end_time BETWEEN '\" + startDate + \"' AND '\" + endDate + \"'\",\n    ]\n\n\n    if (Prtnumber != '') {\n      where.push(\"t0.partnumber LIKE '%\" + Prtnumber + \"%'\")\n    }\n    if (Stage1_dmc != '') {\n      where.push(\"t0.stage1_dmc='\" + Stage1_dmc + \"'\")\n    }\n    if (Stage2_dmc != '') {\n      where.push(\"t0.stage2_dmc='\" + Stage2_dmc + \"'\")\n    }\n    if (Process_code != '') {\n      where.push(\"t3.process_code ='\" + Process_code + \"'\")\n    }\n    if (Mat_type != '') {\n      where.push(\"t2.mat_type='\" + Mat_type + \"'\")\n    }\n    if (Mat_group != '') {\n      where.push(\"t2.mat_group='\" + Mat_group + \"'\")\n    }\n    if (Lot_no != '') {\n      where.push(\"t3.lot_no ='\" + Lot_no + \"'\")\n    }\n\n\n    var finishedPlanLst = db.selectArrayMap({\n      table:\n        ' mes_wip_parts_2021 t0 ' +\n        'LEFT JOIN mes_wip_parts_prod_resume_2021 t1 ON t0. ID = t1.wip_parts_id ' +\n        'LEFT JOIN mes_material t2 ON t0.partnumber = t2.partnumber ' +\n        'LEFT JOIN mes_prod_process_2021 t3 ON t1.prod_process_id = t3.id ' +\n        'LEFT JOIN mes_prod_order_2021 t4 ON t3.prod_order_id = t4.id ' +\n        \"LEFT JOIN mes_material_attr_value t5 ON t5.partnumber=t0.partnumber and t5.attr_class= 'ghp_product_info' and t5.attr_name= 'pn_area'\",\n      field: [\n        't0.partnumber',\n        't1.start_time',\n        't1.end_time',\n        't2.mat_type',\n        't2.mat_group',\n        \"t0.attr_data ->> 'product_line' as\" + '\"attr_data.product_line\"',\n        // \"t1.attr_data ->> 'pn_area' as\" + '\"attr_data.pn_area\"',\n        't5.value as pn_area',\n\n\n        \"t1.attr_data ->> 'pn_material' as\" + '\"attr_data.pn_material\"',\n        \"t1.attr_data ->> 'pn_costomer' as\" + '\"attr_data.pn_costomer\"',\n\n\n        \"t1.attr_data ->> 'remark' as\" + '\"attr_data.remark\"',\n        't3.lot_no  ',\n        't0.stage1_dmc  ',\n        't0.stage2_dmc  ',\n        't3.process_title  ',\n        't3.input_qty  ',\n        \"t1.attr_data ->> 'input_qty' as \" + '\"attr_data.input_qty\"',\n        \"t1.attr_data ->> 'good_qty' as \" + '\"attr_data.good_qty\"',\n        \"t1.attr_data ->> 'scrap_qty' as \" + '\"attr_data.scrap_qty\"',\n        \"t1.attr_data ->> 'diff_qty' as \" + '\"attr_data.diff_qty\"',\n        \"round((t1.attr_data ->> 'good_qty')::NUMERIC /(t1.attr_data ->> 'input_qty')::NUMERIC, 5)  round\",\n        't4.type  ',\n      ],\n      where: where,\n    })\n\n\n    // 枚举转换\n    var DataList = []\n    var mattype = TOPENM.enumList('mes-material-mgt-v2-mattype')\n    var type = TOPENM.enumList('mps-prod-order-type')\n    for (temp in finishedPlanLst) {\n      finishedPlanLst[temp]['mat_type'] = mattype.itemText(\n        finishedPlanLst[temp]['mat_type']\n      )\n      finishedPlanLst[temp]['type'] = type.itemText(\n        finishedPlanLst[temp]['type']\n      )\n      DataList.push(finishedPlanLst[temp])\n    }\n\n\n    var table = getTableViewStructure(startDate, endDate)\n    uiLoader.getObject('table').setHeaderItem(table.header_items)\n    uiLoader.getObject('table').setDataKeyList(table.data_keys)\n    return JSON.stringify({ table: DataList })\n  } catch (e) {\n    TLogger.writeLog('error::' + _.toString(e))\n  }\n\n\n  function getTableViewStructure() {\n    var table = {\n      header_items: [\n        {\n          name: 'partnumber',\n          display: '物料编码',\n          displayRole: '$partnumber',\n          resizeMode: 'ResizeToContents',\n        },\n        {\n          name: 'start_time',\n          display: '开始时间',\n          displayRole: '$start_time',\n          resizeMode: 'ResizeToContents',\n        },\n        {\n          name: 'end_time',\n          display: '结束时间',\n          displayRole: '$end_time',\n          resizeMode: 'ResizeToContents',\n        },\n        {\n          name: 'mat_type',\n          display: '大分类',\n          displayRole: '$mat_type',\n          resizeMode: 'ResizeToContents',\n        },\n        {\n          name: 'mat_group',\n          display: '小分类',\n          displayRole: '$mat_group',\n          resizeMode: 'ResizeToContents',\n        },\n        {\n          name: 'attr_data.product_line',\n          display: '产品生产线',\n          displayRole: '$attr_data.product_line',\n          resizeMode: 'ResizeToContents',\n        },\n        {\n          name: 'pn_area',\n          display: '表面积',\n          displayRole: '$pn_area',\n          resizeMode: 'ResizeToContents',\n        },\n\n\n        {\n          name: 'attr_data.pn_material',\n          display: '产品材质',\n          displayRole: '$attr_data.pn_material',\n          resizeMode: 'ResizeToContents',\n        },\n        {\n          name: 'attr_data.pn_costomer',\n          display: '客户信息',\n          displayRole: '$attr_data.pn_costomer',\n          resizeMode: 'ResizeToContents',\n        },\n\n\n        {\n          name: 'attr_data.remark',\n          display: '备注',\n          displayRole: '$attr_data.remark',\n          resizeMode: 'ResizeToContents',\n        },\n        {\n          name: 'lot_no',\n          display: '生产任务',\n          displayRole: '$lot_no',\n          resizeMode: 'ResizeToContents',\n        },\n        {\n          name: 'stage1_dmc',\n          display: '批号',\n          displayRole: '$stage1_dmc',\n          resizeMode: 'ResizeToContents',\n        },\n        {\n          name: 'stage2_dmc',\n          display: '挂架号',\n          displayRole: '$stage2_dmc',\n          resizeMode: 'ResizeToContents',\n        },\n        {\n          name: 'process_title',\n          display: '工序名称',\n          displayRole: '$process_title',\n          resizeMode: 'ResizeToContents',\n        },\n        {\n          name: 'input_qty',\n          display: '计划数量',\n          displayRole: '$input_qty',\n          resizeMode: 'ResizeToContents',\n        },\n        {\n          name: 'attr_data.input_qty',\n          display: '投入总量',\n          displayRole: '$attr_data.input_qty',\n          resizeMode: 'ResizeToContents',\n        },\n        {\n          name: 'attr_data.good_qty',\n          display: '完成合格量',\n          displayRole: '$attr_data.good_qty',\n          resizeMode: 'ResizeToContents',\n        },\n        {\n          name: 'attr_data.scrap_qty',\n          display: '不合格数量',\n          displayRole: '$attr_data.scrap_qty',\n          resizeMode: 'ResizeToContents',\n        },\n        {\n          name: 'attr_data.diff_qty',\n          display: '盈亏数量',\n          displayRole: '$attr_data.diff_qty',\n          resizeMode: 'ResizeToContents',\n        },\n        {\n          name: 'round',\n          display: '计划达成率',\n          displayRole: '$round',\n          resizeMode: 'ResizeToContents',\n        },\n        {\n          name: 'type',\n          display: '生产类型',\n          displayRole: '$type',\n          resizeMode: 'ResizeToContents',\n        },\n      ],\n      data_keys: [\n        'partnumber',\n        'start_time',\n        'end_time',\n        'attr_data.category',\n        'attr_data.group_name',\n        'attr_data.product_line',\n        'attr_data.pn_area',\n        'lot_no',\n        'stage1_dmc',\n        'stage2_dmc',\n        'process_title',\n        'input_qty',\n        'attr_data.input_qty',\n        'attr_data.good_qty',\n        'attr_data.scrap_qty',\n        'attr_data.diff_qty',\n        'round',\n        'type',\n        'attr_data.pn_material',\n        'attr_data.pn_costomer',\n        'attr_data.remark',\n      ],\n    }\n\n\n    return table\n  }\n}\n\n",
        "name": "production_record",
        "parameter": "startdate,enddate,partnumber,lot_no,stage1_dmc,stage2_dmc,process_code,mat_type,mat_group,",
        "remark": "生产报表"
      },
      "graph": {
        "class": "",
        "data": "[\n    {\n        name: 'info',\n        type: 'VBoxLayout',\n        property: { spacing: 0, margin: 0 },\n        child: [\n            {\n                name: 'table',\n                type: 'TreeView',\n                property: {},\n                pack: {},\n                initCallback: function (obj) {\n                },\n                setter: function (obj, value, self) {\n                  if (value != null) {\n                      obj.loadTreeData(value);\n                  } else {\n                    obj.loadTreeData([]);\n                  }\n              }\n            }\n        ]\n    }\n]\n\n\n",
        "dynamic": 1,
        "name": "production_record",
        "parameter_remark": "",
        "remark": "生产报表"
      }
    }
  ],
  "graph_layout": {
    "child": [
      {
        "name": "production_record",
        "pack": {
          "columnSpan": 1,
          "fromColumn": 0,
          "fromRow": 0,
          "rowSpan": 2
        },
        "type": "uiloader"
      }
    ],
    "type": "gridlayout"
  },
  "name": "production_record",
  "parameter_list": "function func(self) {\n  importPackage('moment')\n  return [\n    {\n      name: 'widget',\n      type: 'Widget',\n      property: {},\n      child: [\n        {\n          name: 'scrollarea',\n          type: 'ScrollArea',\n          property: { widget_resizable: true, frame_shape: 'QFrame::NoFrame' },\n          pack: {},\n          child: {\n            name: 'gridlayout',\n            type: 'GridLayout',\n            property: {},\n            pack: {},\n            child: [\n              // 开始时间\n              {\n                name: 'startdatelbl',\n                type: 'Label',\n                property: {\n                  text: '开始时间',\n                  alignment: 'Qt::AlignLeft',\n                  size_policy: 'Fixed,Fixed',\n                },\n                pack: { row: 0, column: 0 },\n              },\n              {\n                name: 'startdate',\n                type: 'DateEdit',\n                title: self.ttr('Start Date'),\n                pack: { row: 0, column: 1 },\n                /* property: {\n                  enabled: true,\n                  size_policy: 'Fixed,Fixed',\n                }, */\n                initCallback: function (obj, self) {\n                  obj.setData('value', APP.getToday())\n                },\n                validate: function (obj, val, title, moments, self) {\n                  var endDateStr = this.getValue('enddate')\n                  endDateStr = String(endDateStr).replace(/-/g, '/')\n                  val = String(val).replace(/-/g, '/')\n                  var endDate = new Date(endDateStr)\n                  var startDate = new Date(val)\n                  if (val.trim() == '') {\n                    return [title + self.ttr(' can not be null!'), 'Error']\n                  } else if (startDate > endDate) {\n                    return [\n                      self.ttr('Start date can not be later than end date!'),\n                      'Error',\n                    ]\n                  }\n                },\n              },\n              // 结束时间\n              {\n                name: 'endtdatelbl',\n                type: 'Label',\n                property: {\n                  text: '结束时间',\n                  alignment: 'Qt::AlignLeft',\n                  size_policy: 'Fixed,Fixed',\n                },\n                pack: { row: 0, column: 2 },\n              },\n              {\n                name: 'enddate',\n                type: 'DateEdit',\n                title: self.ttr('End Date'),\n                pack: { row: 0, column: 3 },\n                /* property: {\n                  enabled: true,\n                  size_policy: 'Fixed,Fixed',\n                }, */\n                validate: 'NOTNULL',\n                initCallback: function (obj, self) {\n                  obj.setData('value', APP.getToday())\n                },\n              },\n\n\n              //物料编码\n              {\n                name: 'Partnumber',\n                type: 'Label',\n                property: {\n                  text: '物料编码',\n                  alignment: 'Qt::AlignLeft',\n                  size_policy: 'Fixed,Fixed',\n                },\n                pack: { row: 0, column: 4 },\n              },\n              {\n                name: 'partnumber',\n                type: 'LineEdit',\n                title: self.ttr('Partnumber'),\n                property: {\n                  user_data: { operator: 'like' },\n                },\n                pack: { row: 0, column: 5 },\n              },\n\n\n              // 生产任务\n              {\n                name: 'Lot_no',\n                type: 'Label',\n                property: {\n                  text: '生产任务',\n                  alignment: 'Qt::AlignLeft',\n                  size_policy: 'Fixed,Fixed',\n                },\n                pack: { row: 1, column: 0 },\n              },\n              {\n                name: 'lot_no',\n                type: 'LineEdit',\n                title: self.ttr('Lot_no'),\n                pack: { row: 1, column: 1 },\n              },\n\n\n              // 批次\n              {\n                name: 'Stage1_dmc',\n                type: 'Label',\n                property: {\n                  text: '批次',\n                  alignment: 'Qt::AlignLeft',\n                  size_policy: 'Fixed,Fixed',\n                },\n                pack: { row: 1, column: 2 },\n              },\n              {\n                name: 'stage1_dmc',\n                type: 'LineEdit',\n                title: self.ttr('Stage1_dmc'),\n                pack: { row: 1, column: 3 },\n              },\n\n\n              // 挂架号\n              {\n                name: 'Stage2_dmc',\n                type: 'Label',\n                property: {\n                  text: '挂架号',\n                  alignment: 'Qt::AlignLeft',\n                  size_policy: 'Fixed,Fixed',\n                },\n                pack: { row: 1, column: 4 },\n              },\n              {\n                name: 'stage2_dmc',\n                type: 'LineEdit',\n                title: self.ttr('Stage2_dmc'),\n                pack: { row: 1, column: 5 },\n              },\n\n\n              // 工序code\n              {\n                name: 'Process_code',\n                type: 'Label',\n                property: {\n                  text: '工序代码',\n                  alignment: 'Qt::AlignLeft',\n                  size_policy: 'Fixed,Fixed',\n                },\n                pack: { row: 2, column: 0 },\n              },\n              {\n                name: 'process_code',\n                type: 'ComboBox',\n                title: self.ttr('Process_code'),\n                property: {\n                  item_list: [\n                    { name: 'GF003_01', text: '清洗1_投料' },\n                    { name: 'GF003_02', text: '清洗1_清洗' },\n                    { name: 'GF014_GF003', text: '清洗1_检验' },\n                    { name: 'GF015_GF003', text: '清洗1_包装' },\n                    { name: 'GF006_01', text: '钝化2_投料' },\n                    { name: 'GF005_01', text: '钝化1_投料' },\n                    { name: 'GF005_02', text: '钝化1_清洗' },\n                    { name: 'GF006_02', text: '钝化2_清洗' },\n                    { name: 'GF014_GF005', text: '钝化1_检验' },\n                    { name: 'GF014_GF006', text: '钝化2_检验' },\n                    { name: 'GF015_GF005', text: '钝化1_包装' },\n                    { name: 'GF015_GF006', text: '钝化2_包装' },\n                  ],\n                },\n                pack: { row: 2, column: 1 },\n              },\n\n\n              // 大分类\n              {\n                name: 'Mat_type',\n                type: 'Label',\n                property: {\n                  text: '大分类',\n                  alignment: 'Qt::AlignLeft',\n                  size_policy: 'Fixed,Fixed',\n                },\n                pack: { row: 2, column: 2 },\n              },\n              {\n                name: 'mat_type',\n                type: 'LineEdit',\n                title: self.ttr('Mat_type'),\n                pack: { row: 2, column: 3 },\n              },\n\n\n              // 小分类\n              {\n                name: 'Mat_group',\n                type: 'Label',\n                property: {\n                  text: '小分类',\n                  alignment: 'Qt::AlignLeft',\n                  size_policy: 'Fixed,Fixed',\n                },\n                pack: { row: 2, column: 4 },\n              },\n              {\n                name: 'mat_group',\n                type: 'LineEdit',\n                title: self.ttr('Mat_group'),\n                pack: { row: 2, column: 5 },\n              },\n            ],\n          },\n        },\n      ],\n    },\n  ]\n}\n\n",
  "remark": "生产报表"
}