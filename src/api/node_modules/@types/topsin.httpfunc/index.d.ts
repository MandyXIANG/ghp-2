declare namespace TopSinHttpFunc {
    export interface TopSinHttpFileInfo {
        name:string,
        path:string,
        size:Number,
    }

    export class TopSinHttpRequest {
        /**
         * 获取http访问方式;
         * @returns GET | POST
         */
        method():string;

        /**
         * 获取URL路径
         * @returns 如:/apidoc/index.html
         */
        urlPath():string;

        /**
         * 获取所有Url Query参数为一个Map结构;
         * @returns 如: {"par1":"value1","par2","value2"}
         */
        querys():Map<string,string>

        /**
         * 获取指定name的Query值;
         */
        query(iName:string):string;

        /**
         * 获取所有Http Header参数为一个Map结构;
         * @returns 如: {"Content-Length":"102234", "Cookie":"abcd"}
         */
        headers():Map<string,string>;

        /**
         * 获取指定name的Header值;
         */
        header(iName:string):string;

        /**
         * 获取body内容
         */
        body():string;

        /**
         * 获取body文件信息
         * @returns 如:{"path":"C:/tmp/atempuuidfile","size":1245433}
         */
        bodyFileInfo():TopSinHttpFileInfo;

        /**
         * 获取路由捕获后的剩余的路径
         */
        relativePath():string;

        /**
         * 获取路径正则捕捉的参数值,如果捕捉中设置了名称,则key为名称,否则为捕捉的num;
         * @returns 如:{"0":"/api/topsin/", "name":"topsin"}
         */
        pathCaptures():Map<string,string>;

        /**获取指定name的路由捕捉值
         *
         */
        pathCapture(iKey:string):string;

    }

    export class TopSinHttpResponse {

        /**
         * 设置Header
         */
        withHeader(iName:string, iValue:string):TopSinHttpResponse;

        /**
         * 设置HTTP回复状态为200
         */
        ok():TopSinHttpResponse;

        /**
         * 设置Body内容
         * @param iContent
         */
        body(iContent:string):TopSinHttpResponse;

        badRequest(iMsg?:string):TopSinHttpResponse;

        unauthorized(iMsg?:string):TopSinHttpResponse;

        forbidden(iMsg?:string):TopSinHttpResponse;

        notFound(iMsg?:string):TopSinHttpResponse;

        internalServerError(iMsg?:string):TopSinHttpResponse;

        /**
         * 设置HTTP回复状态
         * @param iStatus
         * @param iMsg
         */
        status(iStatus:Number, iMsg?:string):TopSinHttpResponse;

        /**重定向
        */
        redirect(iUrl:string, iForever?:boolean):TopSinHttpResponse;

        /**
         * 设置Content-Type为application/json
         */
        asJson():TopSinHttpResponse;

        /**
         * 设置Content-Type为applicaion/xml
         */
        asXml():TopSinHttpResponse;

        /**
         * 设置Content-Type为plain/text
         */
        asText():TopSinHttpResponse;

        /**
         * 设置Content-Type为plain/html
         */
        asHtml():TopSinHttpResponse;

        /**
         * 设置Content-Type为application/octet-stream
         */
        asBinary():TopSinHttpResponse;

        /**
         * 自定义Content-Type
         */
        as(iContentType:string):TopSinHttpResponse;

        /**
         * 设置charset为utf8
         */
        utf8():TopSinHttpResponse;

        /**
         * 自定义charset
         * @param iCharset
         */
        charset(iCharset:string):TopSinHttpResponse;

        /**
         * 设置Content-Disposition为attachment;filename=iFileName;
         * @param iFileName
         */
        withFileDispostion(iFileName:string):TopSinHttpResponse;

        /**
         * 设置HTTP返回的文件路径;
         * @param iFilePath
         */
        file(iFilePath:string):TopSinHttpResponse;

    }

    export class TopSinHttpServerApp {
        /**
         * 获取配置信息为一个值
         * @param iKey
         * @param iDefaultValue
         */
        getConfigValue(iKey:string, iDefaultValue:any):any;

        /**
         * 获取配置信息为Map
         * @param iKey
         */
        getConfigMap(iKey:string):Map<string,any>;

        /**
         * 获取APP根目录,即bin目录的上一级目录;
         */
        getRootPath():string;

        /**
         * 获取APP执行文件目录;
         */
        getBinPath():string;

    }

    export interface HttpFuncArgv {
        request:TopSinHttpRequest
        response:TopSinHttpResponse
        application:TopSinHttpServerApp
    }    

    /**
     * 获取脚本函数参数
     */
    export function argv():HttpFuncArgv;
}

export = TopSinHttpFunc;


